include/master-slave.inc
[connection master]
CREATE TABLE t (name VARCHAR(25) DEFAULT NULL) ENGINE=InnoDB;
call mtr.add_suppression("Got error 1.*during COMMIT");
ALTER TABLE t CHANGE name name VARCHAR(255);
[connection master]
INSERT INTO t VALUE ('Amy');
# Sync should be successful. Slave should not stop with an error
# ER_SLAVE_CONVERSION_FAILED. It should be up and running in spite
# of errors as we have set slave_skip_error=all.
DROP TABLE t;
[connection master]
UPDATE t SET name='New';
# Sync should be successful. Slave should not stop with an error
# ER_NO_SUCH_TABLE. It should be up and running in spite of errors
# as we have set slave_skip_error=all.
# Enable a debug point to simulate failure during rows event cleanup.
SET @@GLOBAL.debug_dbug= 'd,simulate_rows_event_cleanup_failure';
[connection master]
UPDATE t SET name='Old';
[connection slave]
# Since this is not an ignored error slave should stop. We only ignore the
# errors that are generated during the execution of an event. The other errors
# that are generated during commit/rollback failure, which takes place during cleanup
# cannot be ignored.
include/wait_for_slave_sql_error.inc [errno=1180]
==== Clean up ====
SET @@GLOBAL.debug_dbug= '$debug_saved';
include/stop_slave_io.inc
RESET MASTER;
RESET SLAVE;
include/start_slave.inc
[connection master]
[connection master]
DROP TABLE t;
include/rpl_end.inc
